@page "/createanswer/{questionId}"

<EditForm Model="@answer" OnValidSubmit="AddAnswer" class="container w-50">
    <DataAnnotationsValidator />
    <fieldset>
        <div class="form-group">
            <label for="textarea" class="form-label mt-4">Content</label>
            <InputTextArea @bind-Value="answer.Content" class="form-control" id="textarea" rows="3" style="resize:none"></InputTextArea>
            <ValidationMessage For="@(() => answer.Content)" />
        </div>

        <div class="form-group mb-3">
            <label for="textarea" class="form-label mt-4">Correct Answer?</label>
            <InputSelect @bind-Value="answer.IsCorrect" class="form-control">
                <option value="True">Correct Answer</option>
                <option value="False">Wrong Answer</option>
            </InputSelect>
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary w-25 me-2">Add</button>
            <NavLink class="btn btn-success w-25" href="/answers">Back</NavLink>
        </div>
    </fieldset>
</EditForm>

@code {
    @inject IAnswerRepository _answerRepository;
    @inject NavigationManager navManager;

    [Parameter] public string QuestionId { get; set; }
    private Answer answer = new();

    public async Task AddAnswer()
    {
        await _answerRepository.AddAnswerAsync(answer, int.Parse(QuestionId));
        navManager.NavigateTo($"/editquestion/{QuestionId}");
    }
}
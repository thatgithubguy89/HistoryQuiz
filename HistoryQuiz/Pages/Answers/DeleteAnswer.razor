@page "/deleteanswer/{id}"

<div class="container">
    <fieldset>
        <div class="form-group">
            <label for="textarea" class="form-label mt-4">Content</label>
            <textarea @bind="@answer.Content" disabled="disabled" class="form-control" id="textarea" rows="3" style="resize:none"></textarea>
        </div>

        <div class="form-group mt-4">
            <button class="btn btn-danger w-25 me-2" @onclick="RemoveAnswer">Delete</button>
            <NavLink class="btn btn-success w-25" href="/answers">Back</NavLink>
        </div>
    </fieldset>
</div>

@code {
    @inject ILogger<DeleteAnswer> _logger;
    @inject IAnswerRepository _answerRepository;
    @inject NavigationManager navManager;

    [Parameter] public string Id { get; set; }
    private Answer answer = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            answer = await _answerRepository.GetAnswerByIdAsync(int.Parse(Id)); // Get the answer from the database
        }
        catch (Exception ex)
        {
            _logger.LogError($"Failed to access answer. Id{Id} Component: DeleteAnswer Method: OnInitializedAsync\n", ex);
        }
    }

    public async Task RemoveAnswer()
    {
        try
        {
            await _answerRepository.DeleteAnswerAsync(answer.Id); // Remove the answer from the database
            navManager.NavigateTo($"/answers");  // Go to AnswerList component
        }
        catch (Exception ex)
        {
            _logger.LogError($"Failed to delete answer. Id{Id} Component: DeleteAnswer Method: RemoveAnswer\n", ex);
        }
    }
}
@page "/createplayer"

<EditForm Model="@player" OnValidSubmit="AddPlayer" class="container w-25 text-center">
    <DataAnnotationsValidator />
    <fieldset>
        <div class="form-group">
            <label for="textarea" class="form-label mt-5">Enter your initials</label>
            <InputText @bind-Value="player.Initials" class="form-control" id="textarea"></InputText>
            <ValidationMessage For="@(() => player.Initials)" />
        </div>
        <div class="form-group mt-4">
            <button class="btn btn-primary w-25">Start</button>
        </div>
    </fieldset>
</EditForm>

@code {
    @inject ILogger<StartScreen> _logger;
    @inject IPlayerRepository _playerRepository
    @inject NavigationManager navigationManager

    private Player player = new();
    private Player newPlayer = new();

    public async Task AddPlayer()
    {
        try
        {
            await _playerRepository.CreatePlayerAsync(player); // Get the player from the database
            newPlayer = await _playerRepository.GetPlayerByInitialsAsync(player.Initials); // Get the newly created player from the database
            navigationManager.NavigateTo($"/playgame/{newPlayer.Id}"); // Go to the GameScreen Component
        }
        catch (Exception ex)
        {
            _logger.LogError("Failed to add player. Component: StartScreen Method: AddPlayer\n", ex);
        }
    }
}

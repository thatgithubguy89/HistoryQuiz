@page "/createquestion"

<EditForm Model="@question" OnValidSubmit="AddQuestion" class="container w-50">
    <DataAnnotationsValidator />
    <fieldset>
        <div class="form-group">
            <label for="input" class="form-label mt-4">Title</label>
            <InputText @bind-Value="question.Title" class="form-control" id="input" style="resize:none" />
            <ValidationMessage For="(() => question.Title)" />
        </div>
        <div class="form-group ">
            <label for="textarea" class="form-label mt-4">Content</label>
            <InputTextArea @bind-Value="question.Content" class="form-control" id="textarea" rows="3" style="resize:none"></InputTextArea>
            <ValidationMessage For="(() => question.Content)" />
        </div>
        <div class="form-group mb-3">
            <label for="textarea" class="form-label mt-4">Image</label><br />
            <img src="@question.Image" style="width:200px;height:200px;" /><br />
            <CascadingValue Value="@question.Image">
                <InputFile OnChange="OnInputFileChanged" multiple></InputFile>
            </CascadingValue>
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary w-25">Add</button>
            <input @onclick="QuestionNav" class="btn btn-success w-25" value="Back" />
        </div>
    </fieldset>
</EditForm>

@code {
    @inject IRepository<Question> _questionRepository;
    @inject IImageService _imageService;
    @inject NavigationManager navManager;

    private Question question = new();

    public async Task AddQuestion()
    {
        await _questionRepository.AddAsync(question);
        navManager.NavigateTo("/questions");
    }

    private async Task OnInputFileChanged(InputFileChangeEventArgs e)
    {
        question.Image = await _imageService.AddImage(e);
    }

    public void QuestionNav()
    {
        _imageService.DeleteImage(question.Image); // When navigating back, the image must be deleted from the server
        navManager.NavigateTo("/questions");
    }
}
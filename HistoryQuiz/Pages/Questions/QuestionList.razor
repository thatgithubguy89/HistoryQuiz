@page "/questions"

@if (questions == null)
{
    <p>Loading...</p>
}
else
{
    <div class="container">
        <NavLink class="btn btn-primary mt-2" href="/createquestion">Create Question</NavLink>
    </div>
    <table class="table table-hover container text-center">
        <thead>
            <tr>
                <th scope="col">Title</th>
                <th scope="col">Description</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var question in questions)
            {
                <tr class="table-light">
                    <td>@question.Title</td>
                    <td>@(question.Content.Length > 30 ? @question.Content.Substring(0, 30)+"..." : question.Content)</td>
                    <td>
                        <button @onclick="@(() => navManager.NavigateTo($"/editquestion/{@question.Id}"))" class="btn btn-primary w-25 me-2">Edit</button>
                        <button @onclick="@(() => navManager.NavigateTo($"/deletequestion/{question.Id}"))" class="btn btn-danger w-25 me-2">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    @inject IRepository<Question> _questionRepository;
    @inject NavigationManager navManager;

    private IEnumerable<Question> questions;

    protected override async Task OnInitializedAsync()
    {
        questions = await _questionRepository.GetAllAsync();
    }
}
